/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.26
 * Generated at: 2017-06-09 15:57:49 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class room_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("jar:file:/C:/Users/albert.mensah/JavaEclipseWorkspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/VirtualWhiteBoard/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153399482000L));
    _jspx_dependants.put("jar:file:/C:/Users/albert.mensah/JavaEclipseWorkspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/VirtualWhiteBoard/WEB-INF/lib/spring-webmvc-4.2.6.RELEASE.jar!/META-INF/spring-form.tld", Long.valueOf(1462534132000L));
    _jspx_dependants.put("/WEB-INF/lib/spring-webmvc-4.2.6.RELEASE.jar", Long.valueOf(1486652910383L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1443003709169L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("\t<head>\r\n");
      out.write("\t\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("\t\t<script src=\"resources/js/fabric.js\"></script>\r\n");
      out.write("\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"resources/css/room.css\">\r\n");
      out.write("\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"resources/css/autocomplete.css\">\r\n");
      out.write("\t\t<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\r\n");
      out.write("\t\t<script src=\"resources/js/jquery.autocomplete.min.js\"></script>\r\n");
      out.write("\t\t<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\r\n");
      out.write("\t\t<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\r\n");
      out.write("\t\t<script src=\"resources/js/jscolor.js\"></script>\r\n");
      out.write("\t\t<script src=\"resources/js/canvas.js\"></script>\r\n");
      out.write("\t\t<title>Canvas</title>\r\n");
      out.write("\t</head>\r\n");
      out.write("\t\t<body>\r\n");
      out.write("\t\t\t<div id=\"wrapper\">\r\n");
      out.write("\t\t\t\t<div id=\"chat\">\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<div id=\"wrapperCanvas\">\r\n");
      out.write("\t\t\t\t\t<canvas id=\"c\" width=\"1600\" height=\"720\" style=\"border:none;\"></canvas>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div id=\"toolbar\">\r\n");
      out.write("\t\t\t\t<div class=\"btn btn-notBtn\" style=\"height: 50px; width: 50px;\">\r\n");
      out.write("\t\t\t\t\t<p id=\"penWidthVal\" style=\"position: relative; top: 50%; margin-top: -10px; color: white;\">1</p>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div id=\"sliderDiv\">\r\n");
      out.write("\t\t\t\t\t<input type=\"range\" id=\"penWidth\" value=\"1\" style=\"height: 20px; width: 100px; position: relative; top: 50%; margin-top: -10px;\" onchange=\"updateWidth(this.value)\">\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<button type=\"button\" class=\"btn btn-default btnTool\" id=\"pen\" onclick=\"setPen()\">Pen</button>\r\n");
      out.write("\t\t\t\t<button type=\"button\" class=\"btn btn-default btnTool\" id=\"line\">Line</button>\r\n");
      out.write("\t\t\t\t<button type=\"button\" class=\"btn btn-default btnTool\" id=\"rectangle\">Rect</button>\r\n");
      out.write("\t\t\t\t<button type=\"button\" class=\"btn btn-default btnTool\" id=\"circle\">Circ</button>\r\n");
      out.write("\t\t\t\t<button type=\"button\" class=\"btn btn-default btnTool\" id=\"triangle\">Tri</button>\r\n");
      out.write("\t\t\t\t<input class=\"jscolor\" type=\"hidden\" id=\"color_value\" onchange=\"updateColour(this.value)\" value=\"000000\">\r\n");
      out.write("\t\t\t\t<button type=\"button\" class=\"btn btn-default btnTool jscolor {valueElement : 'color_value'}\" id=\"colour\">Col</button>\r\n");
      out.write("\t\t\t\t<button type=\"button\" class=\"btn btn-default btnTool\" id=\"eraser\" onclick=\"setErase()\">Erase</button>\r\n");
      out.write("\t\t\t\t<button type=\"button\" class=\"btn btn-default btnTool\" id=\"undo\">Undo</button>\r\n");
      out.write("\t\t\t\t<button type=\"button\" class=\"btn btn-default btnTool\" id=\"clear\">Clear</button>\r\n");
      out.write("\t\t\t\t<button type=\"button\" class=\"btn btn-default btnTool\" id=\"exit\">Exit</button>\r\n");
      out.write("\t\t\t\t<button type=\"button\" class=\"btn btn-default btnTool\" id=\"invite\" data-toggle=\"modal\" data-target=\"#inviteUsers\">Invite</button>\r\n");
      out.write("\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<div id=\"inviteUsers\" class=\"modal fade\" role=\"dialog\">\r\n");
      out.write("\t\t\t\t<div class=\"modal-dialog\">\r\n");
      out.write("\t\t\t\t\t <div class=\"modal-content\">\r\n");
      out.write("\t\t      <div class=\"modal-header\">\r\n");
      out.write("\t\t        <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n");
      out.write("\t\t        <h4 class=\"modal-title\">Invite others to join this room.</h4>\r\n");
      out.write("\t\t      </div>\r\n");
      out.write("\t\t      \t\t<div class=\"modal-body\">\r\n");
      out.write("\t\t        \t\t<label for=\"usr\">Search for users by name:</label>\r\n");
      out.write("\t\t        \t\t<form id=\"inviteUserForm\" method=\"post\" action=\"inviteUser\">\r\n");
      out.write("  \t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"w-input-search\">\r\n");
      out.write("  \t\t\t\t\t\t\t<input type=\"hidden\" id=\"userId\" name=\"userId\"/>\r\n");
      out.write("  \t\t\t\t\t\t\t<input type=\"hidden\" id=\"roomUrl\" name=\"roomUrl\" value=\"testroom\"/>\r\n");
      out.write("<!-- \t\t      \t\t\t<div class=\"modal-footer\"> --><hr>\r\n");
      out.write("\t\t       \t\t\t\t<input type=\"submit\" class=\"btn btn-success btn-block\" data-dismiss=\"modal\" value=\"Invite\"/>\r\n");
      out.write("<!-- \t\t       \t\t\t<input type=\"submit\" class=\"btn btn-success btn-block\" value=\"Invite\"/> -->\r\n");
      out.write("<!-- \t\t      \t\t \t</div> -->\r\n");
      out.write("\t\t\t\t\t\t</form>\r\n");
      out.write("\t\t      \t\t</div>\r\n");
      out.write("   \t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<script>\r\n");
      out.write("\t\t\t  $(document).ready(function() {\r\n");
      out.write("\t\t\t\t  \r\n");
      out.write("\t\t\t\t\t$('#w-input-search').autocomplete({\r\n");
      out.write("\t\t\t\t\t\tserviceUrl: 'search',\r\n");
      out.write("\t\t\t\t\t\tparamName: \"query\",\r\n");
      out.write("\t\t\t\t\t\tdelimiter: \",\",\r\n");
      out.write("\t\t\t\t\t\tminChars: \"2\",\r\n");
      out.write("\t\t\t\t\t\twidth: 500,\r\n");
      out.write("\t\t\t\t\t\tonSearchStart: function (query) {\r\n");
      out.write("\t\t\t\t\t\t\t$('#w-input-search').css(\"background\", \"white\");\r\n");
      out.write("\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\tonSearchComplete: function (query, suggestions) {\r\n");
      out.write("\t\t\t\t\t\t\t$('#w-input-search').css(\"background\", \"white\");\r\n");
      out.write("\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t    transformResult: function(response) {\r\n");
      out.write("\t\t\t\t\t\treturn {      \t\r\n");
      out.write("\t\t\t\t\t\t    //must convert json to javascript object before process\r\n");
      out.write("\t\t\t\t\t\t    suggestions: $.map($.parseJSON(response), function(item) { \r\n");
      out.write("\t\t\t\t\t\t    $('#userId').val(item.id);\r\n");
      out.write("\t\t\t\t\t\t    return { value: item.firstname + \", \" + item.lastname, data: item };\r\n");
      out.write("\t\t\t\t\t\t   })\r\n");
      out.write("\t\t\t\t   \t\t };\r\n");
      out.write("\t\t\t\t       },\r\n");
      out.write("\t\t\t\t\t   onSelect: function (suggestion) {\r\n");
      out.write("\t\t\t\t\t\t   $('#userId').val(suggestion.data.id);\r\n");
      out.write("\t\t\t\t\t\t   $('#w-input-search').val(suggestion.data.firstname + \" \" + suggestion.data.lastname);\r\n");
      out.write("\t\t\t\t\t   }\r\n");
      out.write("\t\t\t\t\t });\r\n");
      out.write("\t\t\t\t  });\r\n");
      out.write("\t\t\t</script>\r\n");
      out.write("\t\t</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
